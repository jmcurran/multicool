// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// generateCompositions
List generateCompositions(int n);
RcppExport SEXP multicool_generateCompositions(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(generateCompositions(n));
    return __result;
END_RCPP
}
// Stirling2C
long Stirling2C(int n, int k);
RcppExport SEXP multicool_Stirling2C(SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    __result = Rcpp::wrap(Stirling2C(n, k));
    return __result;
END_RCPP
}
// BellC
long BellC(int n);
RcppExport SEXP multicool_BellC(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    __result = Rcpp::wrap(BellC(n));
    return __result;
END_RCPP
}
// createMCObj
List createMCObj(IntegerVector iSet);
RcppExport SEXP multicool_createMCObj(SEXP iSetSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< IntegerVector >::type iSet(iSetSEXP);
    __result = Rcpp::wrap(createMCObj(iSet));
    return __result;
END_RCPP
}
// allPermC
List allPermC(int id);
RcppExport SEXP multicool_allPermC(SEXP idSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type id(idSEXP);
    __result = Rcpp::wrap(allPermC(id));
    return __result;
END_RCPP
}
// nextPermC
List nextPermC(int id);
RcppExport SEXP multicool_nextPermC(SEXP idSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type id(idSEXP);
    __result = Rcpp::wrap(nextPermC(id));
    return __result;
END_RCPP
}
// multinomCoeff
NumericVector multinomCoeff(NumericVector x);
RcppExport SEXP multicool_multinomCoeff(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    __result = Rcpp::wrap(multinomCoeff(x));
    return __result;
END_RCPP
}
